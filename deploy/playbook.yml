- hosts: localhost
  connection: local
  gather_facts: False
  user: ubuntu

  tasks:
    - name: Provision of ec2 instances
      ec2:
        aws_access_key: AKIAJNHNZY2QD7L6WZWQ
        aws_secret_key: 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
        instance_type: t2.micro
        region: us-east-1
        image: ami-d05e75b8 # ubuntu 14.04 lts
        wait: true
        count: 1
        group: spring-boot-jforex
        monitoring: yes
        vpc_subnet_id: subnet-47f0346d
        assign_public_ip: yes
      register: ec2

    - name: add to host group
      add_host: hostname={[ item.public_ip }} groupname=spring-boot-web-app
      with_items: ec2.instances

    - name: Add all instance public IPs to host group
      add_host: hostname={{ item.public_ip }} groups=ec2hosts
      with_items: ec2.instances

    - name: Wait for the instances to boot by checking the ssh port
      wait_for: host={{item.public_ip }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances


- hosts: ec2hosts
  sudo: yes
  user: ubuntu
  tasks:
    - action: shell whoami
      register: whoami

    - name: update apt cache
      apt: update_cache=yes cache_valid_time=3600
      sudo: yes

    - name: Install System packages
      sudo: yes
      apt: pkg={{ item }} state=latest
      with_items:
        - build-essential
        - gcc
        - libpcre3-dev
        - libssl-dev
        - git
        - tree
        - vim
        - fail2ban
        - psmisc
        - chkrootkit
        - ufw
        - curl
        - wget
        - gnupg
        - zip
        - rsync
        - unattended-upgrades

    #- name: get cwd
      #sudo: yes
      #action: shell ls -la

    - name: Creates www directory
      file: path=/src/www state=directory

    - name: Copy proxy src's to remote server
      copy: src=./scripts/install_tools.sh dest=/src/www/install_tools.sh

    - name: ensure fail2ban is running
      sudo: yes
      action: service name=fail2ban state=restarted enabled=yes

    - name: forbid SSH root login
      sudo: yes
      lineinfile: destfile=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present

    - name: reset firewall
      sudo: yes
      action: shell ufw --force reset

    - name: allow firewall authorized ports
      sudo: yes
      action: shell ufw allow {{ item }}
      with_items:
        - 22
        - 80
        - 443
        - 10443

    - name: enable firewall
      sudo: yes
      action: shell ufw --force enable

    - name: create var www directory
      file: path=/var/www/ state=directory

    - name: Change Install script permissions
      file: path=/src/www/install_tools.sh state=touch mode="u+x"

    - name: Install Java / Tools
      shell: /src/www/install_tools.sh >> _install_log.txt chdir=/opt/

  handlers:

    - name: restart ssh
      sudo: yes
      action: service name=ssh state=restarted enabled=yes
